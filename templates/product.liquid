<!-- /templates/product.liquid -->
{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div class="p-row">
  <div class="p-12">
    {% include 'breadcrumb' %}
  </div>
</div>

<div itemscope itemtype="http://schema.org/Product">
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">
</div>

{% assign current_variant = product.selected_or_first_available_variant %}

<div class="p-row">
  <div class="p-6">
    <div class="feature product-feature">
      {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
      <img src="{{ featured_image | img_url: 'large' }}" alt="{{ featured_image.alt | escape }}" id="ProductPhotoImg">
    </div>
    {% if product.images.size > 1 %}
      <div class="product-thumbnails" id="ProductThumbs">
        {% for image in product.images %}
          <a href="{{ image.src | img_url: 'large' }}" class="image product-single__thumbnail">
            <img src="{{ image.src | img_url: 'compact' }}" alt="{{ image.alt | escape }}">
            <div class="image-overlay"></div>
          </a>
        {% endfor %}
      </div>
    {% endif %}
  </div>
  <div class="p-6">
    <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="form-vertical">
      <h1 class="product-title">{{ product.title }}</h1>
      <section class="product product-summary">
        <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
        <h1 id="ProductPrice" class="product-price" itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}">
          {{ current_variant.price | money }}
        </h1>
        {% if product.compare_at_price_max > product.price %}
          <span class="visually-hidden">{{ 'products.general.sale_price' | t }}</span>
          <p id="ComparePrice">
            {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
          </p>
        {% endif %}

        <select name="id" id="productSelect" class="variant-select">
          {% for variant in product.variants %}
            {% if variant.available %}

              {% comment %}
                Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
              {% endcomment %}
              <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money_with_currency }}</option>

            {% else %}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {% endif %}
          {% endfor %}
        </select>

        {% if product.available and product.variants.size > 1 %}
          {% include 'swatch' with 'Color' %}
        {% endif %}
        
        {% if product.available and product.variants.size > 1 %}
          {% include 'swatch' with 'Size' %}
        {% endif %}

        <button type="submit" name="add" id="AddToCart" class="btn">
          <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
        </button>
      </form>

    </section>

    <section class="product product-description" itemprop="description">
      {{ product.description }}
    </section>

  </div>
</div>

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });
  });

</script>
